
import javax.swing.*;
import java.rmi.Naming;
import java.rmi.RemoteException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import middleware.MiddlewareInterface;

/******************************************************************************
 * File:NewJFrame.java
 * Course: 17655
 * Project: Assignment 2
 * Copyright: Copyright (c) 2009 Carnegie Mellon University
 * Versions:
 *	1.0 November 2009 - Initial rewrite of original assignment 2 (ajl).
 *
 * This class defines a GUI application that allows inventory to be added to the
 * inventory databases. There are tree tables in the inventory database: trees,
 * shrubs, and seeds.
 *
 ******************************************************************************/
/*
 * AddInventoryMainFrame.java
 *
 * Created on Jan 29, 2010, 9:24:23 PM
 */

/**
 *
 * @author lattanze
 */
public class InventoryMainFrame extends javax.swing.JFrame {

    String token = "";
    String versionID = "v2.10.10";

    /*handle all database operations*/
    MiddlewareInterface api;

    /** Creates new form AddInventoryMainFrame */
    public InventoryMainFrame() {

        try {
            initComponents();
            api = (MiddlewareInterface) Naming.lookup("//127.0.0.1:5050/middleware");
            jLabel1.setText("EEPs+LeafTech Inventory" + versionID);
        } catch (Exception ex) {
            Logger.getLogger(InventoryMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jRadioButton1.setText("Trees");
        jRadioButton1.setEnabled(false);
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Shrubs");
        jRadioButton2.setEnabled(false);
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setText("Seeds");
        jRadioButton3.setEnabled(false);
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("EEPs + LeafTech Inventory Management Application");

        jLabel2.setText("Product ID");

        jLabel3.setText("Price");

        jLabel4.setText("Quantity");

        jTextField1.setText("localhost");
        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setEnabled(false);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.setEnabled(false);

        jTextField4.setEnabled(false);

        jButton1.setText("Add Item");
        jButton1.setActionCommand("additem");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel5.setText("Product Description");

        jLabel6.setText("Database Server IP");

        jTextField5.setEnabled(false);
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jButton2.setText("List Inventory");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete Item");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Decrement");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel7.setText("Deletes item selected from list ");

        jLabel8.setText("Decrements inventory count of item selected from the list");

        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jLabel9.setText("username");

        jLabel10.setText("password");

        jButton5.setLabel("Login in");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Login out");
        jButton6.setActionCommand("loginout");
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jRadioButton4.setText("Culture Boxes");
        jRadioButton4.setEnabled(false);
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jRadioButton5.setText("Processing");
        jRadioButton5.setEnabled(false);
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        jRadioButton6.setText("Reference Materials");
        jRadioButton6.setEnabled(false);
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });

        jRadioButton7.setText("Genomics");
        jRadioButton7.setEnabled(false);
        jRadioButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton7ActionPerformed(evt);
            }
        });

        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel6))
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jTextField3)
                                                    .addComponent(jTextField4)
                                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jRadioButton1)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jRadioButton2)
                                                            .addComponent(jRadioButton3))
                                                        .addGap(18, 18, 18)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jRadioButton5)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(jRadioButton4)
                                                                        .addGap(26, 26, 26)
                                                                        .addComponent(jRadioButton7))
                                                                    .addComponent(jRadioButton6))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                    .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                    .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGap(27, 27, 27)
                                                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addGroup(layout.createSequentialGroup()
                                                                        .addGap(5, 5, 5)
                                                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                    .addGroup(layout.createSequentialGroup()
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(jLabel7)
                                                                        .addGap(0, 0, Short.MAX_VALUE))))))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(9, 9, 9)
                                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(40, 40, 40)
                                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGap(105, 105, 105)))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButton1)
                            .addComponent(jLabel2)
                            .addComponent(jRadioButton4)
                            .addComponent(jRadioButton7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButton3)
                            .addComponent(jLabel3)
                            .addComponent(jRadioButton5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButton2)
                            .addComponent(jLabel4)
                            .addComponent(jRadioButton6)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4)
                            .addComponent(jLabel8))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("login in");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        jRadioButton1.setSelected(true);
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);
        jRadioButton4.setSelected(false);
        jRadioButton5.setSelected(false);
        jRadioButton6.setSelected(false);
        jRadioButton7.setSelected(false);

    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(true);
        jRadioButton4.setSelected(false);
        jRadioButton5.setSelected(false);
        jRadioButton6.setSelected(false);
        jRadioButton7.setSelected(false);
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(true);        
        jRadioButton3.setSelected(false);
        jRadioButton4.setSelected(false);
        jRadioButton5.setSelected(false);
        jRadioButton6.setSelected(false);
        jRadioButton7.setSelected(false);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);
        jRadioButton4.setSelected(true);
        jRadioButton5.setSelected(false);
        jRadioButton6.setSelected(false);
        jRadioButton7.setSelected(false);
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        // TODO add your handling code here:
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);
        jRadioButton4.setSelected(false);
        jRadioButton5.setSelected(true);
        jRadioButton6.setSelected(false);
        jRadioButton7.setSelected(false);
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed
        // TODO add your handling code here:
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);
        jRadioButton4.setSelected(false);
        jRadioButton5.setSelected(false);
        jRadioButton6.setSelected(true);
        jRadioButton7.setSelected(false);
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void jRadioButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton7ActionPerformed
        // TODO add your handling code here:
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);
        jRadioButton4.setSelected(false);
        jRadioButton5.setSelected(false);
        jRadioButton6.setSelected(false);
        jRadioButton7.setSelected(true);
    }//GEN-LAST:event_jRadioButton7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // Adds inventory to database

            String description;             // Tree, seed, or shrub description
            String errString = null;        // String for displaying errors
            Boolean fieldError = false;     // Error flag
            String msgString = null;        // String for displaying non-error messages
            String tableSelected = null;    // String used to determine which data table to use
            Integer quantity;               // Quantity of trees, seeds, or shrubs
            Float perUnitCost;              // Cost per tree, seed, or shrub unit
            String productID = null;        // Product id of tree, seed, or shrub

            String SQLServerIP = jTextField1.getText();
            // Check to make sure a radio button is selected

            jTextArea1.setText("");

            if (!jRadioButton1.isSelected() && !jRadioButton2.isSelected() && !jRadioButton3.isSelected() && !jRadioButton4.isSelected() && !jRadioButton5.isSelected() && !jRadioButton6.isSelected() && !jRadioButton7.isSelected())
            {
                fieldError = true;
                jTextArea1.append("\nMust select Tree, Seeds, or Shrubs or culture boxes, processing, reference materials, Genomics radio button.");

            } else {

                //Make sure there is a product description
                if ( jTextField5.getText().length() == 0 )
                {
                    fieldError = true;
                    jTextArea1.append("\nMust enter a product description.");

                } else {

                    //Make sure there is a product ID
                    if ( jTextField2.getText().length() == 0 )
                    {
                        fieldError = true;
                        jTextArea1.append("\nMust enter a product ID.");
                    } else {

                        //Make sure there is a price
                        if ( jTextField3.getText().length() == 0 )
                        {
                            fieldError = true;
                            jTextArea1.append("\nMust enter a product price.");
                        } else {

                            //Make sure quantity is specified
                            if ( jTextField4.getText().length() == 0 )
                            {
                                fieldError = true;
                                jTextArea1.append("\nMust enter a product quantity.");
                            } // quantity
                        } // price
                    } // product ID
                } //product description
            } //category selected


            if ( !fieldError )
            {
                // get the data from the text fields
                description = jTextField5.getText();
                productID = jTextField2.getText();
                quantity = Integer.parseInt(jTextField4.getText());
                perUnitCost = Float.parseFloat(jTextField3.getText());


                // if trees are selected then insert inventory into trees
                // table
                if (jRadioButton1.isSelected())
                {
                    msgString = api.addItems(SQLServerIP, "inventory", "trees", productID, description, quantity, perUnitCost, token);
                }

                // if shrubs are selected then insert inventory into strubs
                // table
                if (jRadioButton2.isSelected())
                {
                    msgString = api.addItems(SQLServerIP, "inventory", "shrubs", productID, description, quantity, perUnitCost, token);
                }

                // if seeds are selected then insert inventory into seeds
                // table
                if (jRadioButton3.isSelected())
                {
                    msgString = api.addItems(SQLServerIP, "inventory", "seeds", productID, description, quantity, perUnitCost, token);
                }

                if (jRadioButton4.isSelected())
                {
                    msgString = api.addItems(SQLServerIP, "leaftech", "cultureboxes", productID, description, quantity, perUnitCost, token);
                }

                if (jRadioButton5.isSelected())
                {
                    msgString = api.addItems(SQLServerIP, "leaftech", "processing", productID, description, quantity, perUnitCost, token);
                }

                if (jRadioButton6.isSelected())
                {
                    msgString = api.addItems(SQLServerIP, "leaftech", "referencematerials", productID, description, quantity, perUnitCost, token);
                }

                if (jRadioButton7.isSelected())
                {
                    msgString = api.addItems(SQLServerIP, "leaftech", "genomics", productID, description, quantity, perUnitCost, token);
                }

                jTextArea1.setText(msgString);

            } // fieldError check

        } catch (RemoteException ex) {
            Logger.getLogger(InventoryMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }



    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try {
            Boolean fieldError = true;      // Error flag
            String msgString = null;        // String for displaying non-error messages
            String SQLServerIP = jTextField1.getText();

            // Check to make sure a radio button is selected
            if (jRadioButton1.isSelected() || jRadioButton2.isSelected() || jRadioButton3.isSelected()
                    || jRadioButton4.isSelected() || jRadioButton5.isSelected() || jRadioButton6.isSelected()
                    || jRadioButton7.isSelected())
            {
                fieldError = false;

            } else {

                msgString = "Must select Tree, Seeds, or Shrubs radio button or Culture Boxes, Processing, Reference Material or Genomics";
                jTextArea1.setText("\n"+msgString);
            }


            //Now, we try to connect to the inventory database.
            if (!fieldError)
            {
                //Clear the fields - they are not needed and may cause confusion
                jTextField2.setText("");
                jTextField3.setText("");
                jTextField4.setText("");
                jTextField5.setText("");
                jTextArea1.setText("");

                jTextArea1.setText("");


                // now we build a query to list the inventory table contents
                // for the user
                // ... here is the SQL for trees
                if (jRadioButton1.isSelected())
                {
                    msgString = api.getItems(SQLServerIP, "inventory", "trees", token);
                }
                // ... here is the SQL for shrubs
                if (jRadioButton2.isSelected())
                {
                    msgString = api.getItems(SQLServerIP, "inventory", "shrubs", token);
                }
                // ... here is the SQL for seeds
                if (jRadioButton3.isSelected())
                {
                    msgString = api.getItems(SQLServerIP, "inventory", "seeds", token);
                }
                // ... here is the SQL for culture boxes
                if (jRadioButton4.isSelected())
                {
                    msgString = api.getItems(SQLServerIP, "leaftech", "cultureboxes", token);
                }
                // ... here is the SQL for processing
                if (jRadioButton5.isSelected())
                {
                    msgString = api.getItems(SQLServerIP, "leaftech", "processing", token);
                }
                // ... here is the SQL for reference materials
                if (jRadioButton6.isSelected())
                {
                    msgString = api.getItems(SQLServerIP, "leaftech", "referencematerials", token);
                }
                // ... here is the SQL for genomics
                if (jRadioButton7.isSelected())
                {
                    msgString = api.getItems(SQLServerIP, "leaftech", "genomics", token);
                }
                jTextArea1.setText(msgString);

            } // fielderror check - make sure a product is selected

            //If there is not connection error, then we form the SQL statement
            //and then execute it.
        } catch (RemoteException ex) {
            Logger.getLogger(InventoryMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Deletes an item from the database

        try {
            int beginIndex;                     // Parsing index
            int endIndex;                       // Parsing index
            String productID = null;            // Product ID pnemonic
            Boolean IndexNotFound;              // Flag indicating a string index was not found.
            String msgString = null;            // String for displaying non-error messages
            String inventorySelection = null;   // Inventory text string selected by user
            IndexNotFound = false;              // Flag indicating that a string index was not found
            String SQLServerIP = jTextField1.getText();

            // this is the selected line of text
            inventorySelection =  jTextArea1.getSelectedText();

            // make sure the selection is not blank
            if ( inventorySelection != null )
            {
                // get the product ID - here we get the leading index
                beginIndex = 0;
                endIndex = inventorySelection.indexOf(">>",beginIndex);

                if (endIndex < 0 ) {
                    IndexNotFound = true;
                } else {
                    beginIndex = endIndex+2; //skip past ">>"
                }

                if ( !IndexNotFound )
                {
                    // Here we get the trailing index and parse out the productID
                    endIndex = inventorySelection.indexOf(":",beginIndex);

                    if (endIndex < 0 ) {
                        IndexNotFound = true;
                    } else {
                        productID = inventorySelection.substring(beginIndex,endIndex);
                    }
                }

                // Now we delete the inventory item indicated by the productID we
                // parsed out above from the indicated table.

                if ( !IndexNotFound )
                {
                    jTextArea1.setText("");
                    jTextArea1.append( "Deleting ProductID: " + productID );

                    // if trees inventory selected
                    if (jRadioButton1.isSelected())
                    {
                        msgString = api.deleteItems(SQLServerIP, "inventory", "trees", productID, token);
                    }

                    // if shrubs inventory selected
                    if (jRadioButton2.isSelected())
                    {
                        msgString = api.deleteItems(SQLServerIP, "inventory", "shrubs", productID, token);
                    }

                    // if seeds inventory selected
                    if (jRadioButton3.isSelected())
                    {
                        msgString = api.deleteItems(SQLServerIP, "inventory", "seeds", productID, token);
                    }

                    // if cultureboxes leaftech selected
                    if (jRadioButton4.isSelected())
                    {
                        msgString = api.deleteItems(SQLServerIP, "leaftech", "cultureboxes", productID, token);
                    }

                    // if processing leaftech selected
                    if (jRadioButton5.isSelected())
                    {
                        msgString = api.deleteItems(SQLServerIP, "leaftech", "processing", productID, token);
                    }

                    // if referencematerials leaftech selected
                    if (jRadioButton6.isSelected())
                    {
                        msgString = api.deleteItems(SQLServerIP, "leaftech", "referencematerials", productID, token);
                    }

                    // if genomics leaftech selected
                    if (jRadioButton7.isSelected())
                    {
                        msgString = api.deleteItems(SQLServerIP, "leaftech", "genomics", productID, token);
                    }

                    jTextArea1.append("\n\n" + productID + " deleted...");
                    jTextArea1.append("\n Number of items deleted: " + msgString );


                } else {

                    jTextArea1.setText("");
                    jTextArea1.append("\nNo items selected...\nSELECT ENTIRE INVENTORY LINE TO ADD ITEM TO ORDER\n(TRIPLE CLICK ITEM LINE)");

                }
            } else {

                jTextArea1.setText("");
                jTextArea1.append("\nNo items selected...\nSELECT ENTIRE INVENTORY LINE TO ADD ITEM TO ORDER\n(TRIPLE CLICK ITEM LINE)");

            } // Blank string check
        } catch (RemoteException ex) {
            Logger.getLogger(InventoryMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Decrements the inventory count for a selected item

        try {
            int beginIndex;                     // Parsing index
            int endIndex;                       // Parsing index
            String productID = null;            // Product ID pnemonic
            Boolean IndexNotFound;              // Flag indicating a string index was not found.
            String msgString = null;            // String for displaying non-error messages
            java.sql.Statement s = null;        // SQL statement pointer
            String inventorySelection = null;   // Inventory text string selected by user
            IndexNotFound = false;              // Flag indicating that a string index was not found
            String SQLServerIP = jTextField1.getText();

            // this is the selected line of text
            inventorySelection =  jTextArea1.getSelectedText();

            // make sure the selection is not blank
            if ( inventorySelection != null )
            {
                // get the product ID - here we get the leading index
                beginIndex = 0;
                endIndex = inventorySelection.indexOf(">>",beginIndex);

                if (endIndex < 0 ) {
                    IndexNotFound = true;
                } else {
                    beginIndex = endIndex+2; //skip past ">>"
                }

                if ( !IndexNotFound )
                {
                    // Here we get the trailing index and parse out the productID
                    endIndex = inventorySelection.indexOf(":",beginIndex);

                    if (endIndex < 0 ) {
                        IndexNotFound = true;
                    } else {
                        productID = inventorySelection.substring(beginIndex,endIndex);
                    }
                }

                // Now we decrement the inventory count of the item indicated by the productID we
                // parsed out above from the indicated table.

                if ( !IndexNotFound )
                {
                    jTextArea1.setText("");
                    jTextArea1.append( "Decrement ProductID: " + productID );

                    //If there is no connection error, then we form the SQL statement
                    //to decrement the inventory item count and then execute it.
                    // if trees inventory selected
                    if (jRadioButton1.isSelected())
                    {
                        msgString = api.decrementItems(SQLServerIP, "inventory", "trees", productID, token);
                    }

                    // if strubs inventory selected
                    if (jRadioButton2.isSelected())
                    {
                        msgString = api.decrementItems(SQLServerIP, "inventory", "shrubs", productID, token);
                    }

                    // if seeds inventory selected
                    if (jRadioButton3.isSelected())
                    {
                        msgString = api.decrementItems(SQLServerIP, "inventory", "seeds", productID, token);
                    }

                    if (jRadioButton4.isSelected())
                    {
                        msgString = api.decrementItems(SQLServerIP, "leaftech", "cultureboxes", productID, token);
                    }

                    if (jRadioButton5.isSelected())
                    {
                        msgString = api.decrementItems(SQLServerIP, "leaftech", "processing", productID, token);
                    }

                    if (jRadioButton6.isSelected())
                    {
                        msgString = api.decrementItems(SQLServerIP, "leaftech", "referencematerials", productID, token);
                    }

                    if (jRadioButton7.isSelected())
                    {
                        msgString = api.decrementItems(SQLServerIP, "leaftech", "genomics", productID, token);
                    }

                    jTextArea1.append(msgString);

                } else {

                    jTextArea1.setText("");
                    jTextArea1.append("\nNo items selected...\nSELECT ENTIRE INVENTORY LINE TO ADD ITEM TO ORDER\n(TRIPLE CLICK ITEM LINE)");

                }
            } else {

                jTextArea1.setText("");
                jTextArea1.append("\nNo items selected...\nSELECT ENTIRE INVENTORY LINE TO ADD ITEM TO ORDER\n(TRIPLE CLICK ITEM LINE)");

            } // Blank string check
        } catch (RemoteException ex) {
            Logger.getLogger(InventoryMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        try {
            String username;
            char [] password;
            username = jTextField8.getText();
            password = jPasswordField1.getPassword();
            token = api.login(username, password);
            System.out.println("Thank you : " + token);
            if (!token.trim().equals("Error")) {
                jTextField1.setEnabled(true);
                jTextField5.setEnabled(true);
                jTextField2.setEnabled(true);
                jTextField3.setEnabled(true);
                jTextField4.setEnabled(true);
                jTextArea1.setEnabled(true);
                jRadioButton1.setEnabled(true);
                jRadioButton2.setEnabled(true);
                jRadioButton3.setEnabled(true);
                jRadioButton4.setEnabled(true);
                jRadioButton5.setEnabled(true);
                jRadioButton6.setEnabled(true);
                jRadioButton7.setEnabled(true);
                jButton2.setEnabled(true);
                jButton3.setEnabled(true);
                jButton4.setEnabled(true);
                jButton1.setEnabled(true);
                jButton6.setEnabled(true);    //login out
                jButton5.setEnabled(false);   //login in
                jLabel11.setText("Logged In as " + username);
            } else {
                token = "";
                jLabel11.setText("Wrong Username Password. Please Try again.");
            }
        } catch (RemoteException ex) {
            Logger.getLogger(InventoryMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:

        try {
            if (api.logout(token)) {
                jTextField1.setText("");
                jTextField5.setText("");
                jTextField2.setText("");
                jTextField3.setText("");
                jTextField4.setText("");
                jTextArea1.setText("");

                jTextField8.setText("");
                jPasswordField1.setText("");

                jTextField1.setEnabled(false);
                jTextField5.setEnabled(false);
                jTextField2.setEnabled(false);
                jTextField3.setEnabled(false);
                jTextField4.setEnabled(false);
                jTextArea1.setEnabled(false);
                jRadioButton1.setEnabled(false);
                jRadioButton2.setEnabled(false);
                jRadioButton3.setEnabled(false);
                jRadioButton4.setEnabled(false);
                jRadioButton5.setEnabled(false);
                jRadioButton6.setEnabled(false);
                jRadioButton7.setEnabled(false);
                jButton2.setEnabled(false);
                jButton3.setEnabled(false);
                jButton4.setEnabled(false);
                jButton1.setEnabled(false);
                jButton6.setEnabled(false);    //login out
                jButton5.setEnabled(true);   //login in
                token = "";
                jLabel11.setText("logout");
            } else {
                jLabel11.setText("Something went wrong. Please Try again.");
            }
        } catch (RemoteException ex) {
            Logger.getLogger(InventoryMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventoryMainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables

}
